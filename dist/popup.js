const inputTextArea=document.getElementById("input-text"),sendButton=document.getElementById("send-button"),clearButton=document.getElementById("clear-button"),statusMessage=document.getElementById("status-message"),responseText=document.getElementById("response-text");function handleResponse(e){e.status&&(console.log("応答を受信:",e),"success"===e.status&&"responseReceived"===e.event?(responseText.textContent=e.payload.text,setStatus("応答を受信しました",!1)):"error"===e.status&&(responseText.textContent=`エラー: ${e.message}`,setStatus(`エラーが発生しました: ${e.message}`,!0)),setLoading(!1))}function setStatus(e,t){statusMessage.textContent=e,t?statusMessage.classList.add("error"):statusMessage.classList.remove("error")}function setLoading(e){sendButton.disabled=e,inputTextArea.disabled=e}chrome.runtime.onMessage.addListener(handleResponse),sendButton.addEventListener("click",(()=>{const e=inputTextArea.value.trim();e?(setLoading(!0),setStatus("Geminiに送信しています...",!1),chrome.runtime.sendMessage({command:"setInput",payload:{text:e}}),chrome.runtime.sendMessage({command:"clickSend"})):setStatus("テキストを入力してください",!0)})),clearButton.addEventListener("click",(()=>{inputTextArea.value="",responseText.textContent="",statusMessage.textContent="",statusMessage.classList.remove("error")})),document.addEventListener("DOMContentLoaded",(()=>{inputTextArea.focus()}));