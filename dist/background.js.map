{"version":3,"file":"background.js","mappings":"yBAGA,IAEIA,EAAkB,CAAC,EAkCvBC,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,EAAQC,KACnD,IAAIC,EAEJ,GAAIF,EAAOG,MAAkC,QAAzBD,EAAKF,EAAOG,IAAIC,WAAwB,IAAPF,OAAgB,EAASA,EAAGG,SAAS,sBAAuB,CAC7G,MAAMC,EAAQN,EAAOG,IAAII,GAEzB,GAAqB,kBAAjBR,EAAQS,MAA4BF,EAGpC,OAFAG,QAAQC,IAAI,SAASJ,sBACrBZ,EAAgBY,IAAS,GAIzBP,EAAQY,SACRF,QAAQC,IAAI,qBAAsBX,GAIlCJ,OAAOC,QAAQgB,YAAYb,GAEnC,MAEUC,EAAOG,KAAOJ,EAAQc,UAC5BJ,QAAQC,IAAI,oBAAqBX,GAMzC,SAAuCA,GACnCJ,OAAOmB,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAASH,IACtD,IAAIZ,EACJ,MAAMgB,EAAYJ,EAAK,GACnBI,GAAaA,EAAUX,KAAgC,QAAxBL,EAAKgB,EAAUd,WAAwB,IAAPF,OAAgB,EAASA,EAAGG,SAAS,sBAEhGX,EAAgBwB,EAAUX,IAC1BZ,OAAOmB,KAAKF,YAAYM,EAAUX,GAAIR,GAGtCU,QAAQU,MAAM,SAASD,EAAUX,sBAKrCE,QAAQU,MAAM,0BAYlBV,QAAQU,MAAM,qCARtB,CAxBQC,CAA8BrB,IAElC,OAAO,I","sources":["webpack://GeminiMcpGateway/./src/background.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst HOST_NAME = 'com.example.gemini_mcp_gateway';\nlet nativePort = null;\nlet isMcpServerConnected = false;\nlet geminiTabStatus = {}; // ★タブごとに準備完了状態を管理\n// MCPサーバーへの接続処理（変更なし）\nfunction connectToNativeHost() {\n    try {\n        console.log('MCPサーバーに接続を試みています...');\n        nativePort = chrome.runtime.connectNative(HOST_NAME);\n        nativePort.onMessage.addListener((message) => {\n            console.log('MCPサーバーからメッセージを受信:', message);\n            isMcpServerConnected = true;\n            // ★コマンドをアクティブなGeminiタブに送信する\n            sendCommandsToActiveGeminiTab(message);\n        });\n        nativePort.onDisconnect.addListener(() => {\n            console.log('MCPサーバーとの接続が切断されました');\n            const error = chrome.runtime.lastError;\n            if (error) {\n                console.error('接続エラー:', error);\n            }\n            nativePort = null;\n            isMcpServerConnected = false;\n            setTimeout(connectToNativeHost, 5000);\n        });\n        console.log('MCPサーバーに接続しました');\n        isMcpServerConnected = true;\n    }\n    catch (error) {\n        console.error('MCPサーバーへの接続に失敗しました:', error);\n        nativePort = null;\n        isMcpServerConnected = false;\n        setTimeout(connectToNativeHost, 5000);\n    }\n}\n// connectToNativeHost();\n// ★★★ 修正箇所：２つあったonMessageリスナーを１つに統合し、ハンドシェイクを追加 ★★★\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    var _a;\n    // 1. content.jsからのメッセージを処理\n    if (sender.tab && ((_a = sender.tab.url) === null || _a === void 0 ? void 0 : _a.includes('gemini.google.com'))) {\n        const tabId = sender.tab.id;\n        // content.jsからの「準備完了」挨拶(ハンドシェイク)を処理\n        if (message.type === 'content_ready' && tabId) {\n            console.log(`タブID: ${tabId} の準備が完了しました。`);\n            geminiTabStatus[tabId] = true; // このタブは準備OKと記録\n            return;\n        }\n        // content.jsからの応答メッセージを処理\n        if (message.status) {\n            console.log('content.jsから応答を受信:', message);\n            if (isMcpServerConnected && nativePort) {\n                nativePort.postMessage(message); // MCPサーバーへ転送\n            }\n            chrome.runtime.sendMessage(message); // ポップアップへも転送\n        }\n    }\n    // 2. ポップアップからのコマンドメッセージを処理\n    else if (!sender.tab && message.command) {\n        console.log('ポップアップからメッセージを受信:', message);\n        sendCommandsToActiveGeminiTab(message);\n    }\n    return true; // 非同期処理を許可\n});\n// アクティブなGeminiタブにコマンドを送信する共通関数\nfunction sendCommandsToActiveGeminiTab(message) {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        var _a;\n        const activeTab = tabs[0];\n        if (activeTab && activeTab.id && ((_a = activeTab.url) === null || _a === void 0 ? void 0 : _a.includes('gemini.google.com'))) {\n            // タブが準備完了しているか確認\n            if (geminiTabStatus[activeTab.id]) {\n                chrome.tabs.sendMessage(activeTab.id, message);\n            }\n            else {\n                console.error(`タブID: ${activeTab.id} はまだ準備ができていません。`);\n                // 必要ならエラーを返す処理\n            }\n        }\n        else {\n            console.error('アクティブなGeminiタブが見つかりません');\n            sendErrorToNativeHost('アクティブなGeminiタブが見つかりません');\n        }\n    });\n}\n// エラーメッセージをMCPサーバーに送信する関数（変更なし）\nfunction sendErrorToNativeHost(errorMessage) {\n    if (nativePort) {\n        const errorResponse = { status: 'error', message: errorMessage };\n        nativePort.postMessage(errorResponse);\n    }\n    else {\n        console.error('エラーを送信できません: MCPサーバーに接続されていません');\n    }\n}\n"],"names":["geminiTabStatus","chrome","runtime","onMessage","addListener","message","sender","sendResponse","_a","tab","url","includes","tabId","id","type","console","log","status","sendMessage","command","tabs","query","active","currentWindow","activeTab","error","sendCommandsToActiveGeminiTab"],"sourceRoot":""}